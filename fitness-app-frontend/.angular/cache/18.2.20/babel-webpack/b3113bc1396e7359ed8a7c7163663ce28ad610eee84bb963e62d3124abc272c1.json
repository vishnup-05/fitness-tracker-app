{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class ProfileComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {};\n  }\n  ngOnInit() {\n    this.authService.getUserProfile().subscribe(data => {\n      this.user = data;\n    }, error => {\n      console.error('Error fetching user profile', error);\n    });\n  }\n  updateProfile() {\n    this.authService.updateUserProfile(this.user).subscribe(data => {\n      alert('Profile updated successfully!');\n      this.user = data;\n    }, error => {\n      console.error('Error updating user profile', error);\n      alert('Failed to update profile.');\n    });\n  }\n  static {\n    this.ɵfac = function ProfileComponent_Factory(t) {\n      return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfileComponent,\n      selectors: [[\"app-profile\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 26,\n      vars: 5,\n      consts: [[1, \"profile-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"disabled\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"age\"], [\"type\", \"number\", \"id\", \"age\", \"name\", \"age\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"weight\"], [\"type\", \"number\", \"id\", \"weight\", \"name\", \"weight\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"fitnessGoals\"], [\"id\", \"fitnessGoals\", \"name\", \"fitnessGoals\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"]],\n      template: function ProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"User Profile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateProfile();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.username, $event) || (ctx.user.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Age:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.age, $event) || (ctx.user.age = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n          i0.ɵɵtext(18, \"Weight (kg):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.weight, $event) || (ctx.user.weight = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n          i0.ɵɵtext(22, \"Fitness Goals:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"textarea\", 12);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_textarea_ngModelChange_23_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.fitnessGoals, $event) || (ctx.user.fitnessGoals = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"button\", 13);\n          i0.ɵɵtext(25, \"Update Profile\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.age);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.weight);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.fitnessGoals);\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      styles: [\".profile-container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 50px auto;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  background-color: #fff;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #333;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n  color: #555;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], \\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], \\ninput[type=\\\"number\\\"][_ngcontent-%COMP%], \\ntextarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\ntextarea[_ngcontent-%COMP%] {\\n  resize: vertical;\\n  min-height: 80px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 16px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHlDQUF5QztFQUN6QyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBOzs7O0VBSUUsV0FBVztFQUNYLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogNTBweCBhdXRvO1xuICBwYWRkaW5nOiAyMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG5oMiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMzMzM7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBjb2xvcjogIzU1NTtcbn1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7XG4gIG1pbi1oZWlnaHQ6IDgwcHg7XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","ProfileComponent","constructor","authService","user","ngOnInit","getUserProfile","subscribe","data","error","console","updateProfile","updateUserProfile","alert","i0","ɵɵdirectiveInject","i1","AuthService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProfileComponent_Template_form_ngSubmit_3_listener","ɵɵtwoWayListener","ProfileComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","username","ProfileComponent_Template_input_ngModelChange_11_listener","email","ProfileComponent_Template_input_ngModelChange_15_listener","age","ProfileComponent_Template_input_ngModelChange_19_listener","weight","ProfileComponent_Template_textarea_ngModelChange_23_listener","fitnessGoals","ɵɵadvance","ɵɵtwoWayProperty","i2","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["D:\\Projects\\GeminiCLI_PR\\fitness-app-frontend\\src\\app\\profile\\profile.component.ts","D:\\Projects\\GeminiCLI_PR\\fitness-app-frontend\\src\\app\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class ProfileComponent implements OnInit {\n  user: any = {};\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getUserProfile().subscribe(\n      (data) => {\n        this.user = data;\n      },\n      (error) => {\n        console.error('Error fetching user profile', error);\n      }\n    );\n  }\n\n  updateProfile(): void {\n    this.authService.updateUserProfile(this.user).subscribe(\n      (data) => {\n        alert('Profile updated successfully!');\n        this.user = data;\n      },\n      (error) => {\n        console.error('Error updating user profile', error);\n        alert('Failed to update profile.');\n      }\n    );\n  }\n}\n","<div class=\"profile-container\">\n  <h2>User Profile</h2>\n  <form (ngSubmit)=\"updateProfile()\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"user.username\" name=\"username\" disabled>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"age\">Age:</label>\n      <input type=\"number\" id=\"age\" [(ngModel)]=\"user.age\" name=\"age\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"weight\">Weight (kg):</label>\n      <input type=\"number\" id=\"weight\" [(ngModel)]=\"user.weight\" name=\"weight\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"fitnessGoals\">Fitness Goals:</label>\n      <textarea id=\"fitnessGoals\" [(ngModel)]=\"user.fitnessGoals\" name=\"fitnessGoals\"></textarea>\n    </div>\n    <button type=\"submit\">Update Profile</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}