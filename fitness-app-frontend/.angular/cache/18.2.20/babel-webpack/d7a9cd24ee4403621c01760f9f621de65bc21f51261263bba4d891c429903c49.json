{"ast":null,"code":"import { WorkoutListComponent } from './workout-list/workout-list.component';\nimport { WorkoutFormComponent } from './workout-form/workout-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\nexport const routes = [{\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'workouts',\n  component: WorkoutListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'add-workout',\n  component: WorkoutFormComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'add-workout/:id',\n  component: WorkoutFormComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'profile',\n  component: ProfileComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '',\n  redirectTo: '/workouts',\n  pathMatch: 'full'\n}, {\n  path: '**',\n  redirectTo: '/workouts'\n} // Wildcard route for any unmatched URL\n];","map":{"version":3,"names":["WorkoutListComponent","WorkoutFormComponent","LoginComponent","RegisterComponent","AuthGuard","ProfileComponent","routes","path","component","canActivate","redirectTo","pathMatch"],"sources":["D:\\Projects\\GeminiCLI_PR\\fitness-app-frontend\\src\\app\\app.routes.ts"],"sourcesContent":["import { Routes } from '@angular/router';\nimport { WorkoutListComponent } from './workout-list/workout-list.component';\nimport { WorkoutFormComponent } from './workout-form/workout-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\n\nexport const routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'workouts', component: WorkoutListComponent, canActivate: [AuthGuard] },\n  { path: 'add-workout', component: WorkoutFormComponent, canActivate: [AuthGuard] },\n  { path: 'add-workout/:id', component: WorkoutFormComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: '', redirectTo: '/workouts', pathMatch: 'full' },\n  { path: '**', redirectTo: '/workouts' } // Wildcard route for any unmatched URL\n];"],"mappings":"AACA,SAASA,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,OAAO,MAAMC,MAAM,GAAW,CAC5B;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN;AAAc,CAAE,EAC5C;EAAEK,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAiB,CAAE,EAClD;EAAEI,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER,oBAAoB;EAAES,WAAW,EAAE,CAACL,SAAS;AAAC,CAAE,EAC/E;EAAEG,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEP,oBAAoB;EAAEQ,WAAW,EAAE,CAACL,SAAS;AAAC,CAAE,EAClF;EAAEG,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEP,oBAAoB;EAAEQ,WAAW,EAAE,CAACL,SAAS;AAAC,CAAE,EACtF;EAAEG,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEH,gBAAgB;EAAEI,WAAW,EAAE,CAACL,SAAS;AAAC,CAAE,EAC1E;EAAEG,IAAI,EAAE,EAAE;EAAEG,UAAU,EAAE,WAAW;EAAEC,SAAS,EAAE;AAAM,CAAE,EACxD;EAAEJ,IAAI,EAAE,IAAI;EAAEG,UAAU,EAAE;AAAW,CAAE,CAAC;AAAA,CACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}