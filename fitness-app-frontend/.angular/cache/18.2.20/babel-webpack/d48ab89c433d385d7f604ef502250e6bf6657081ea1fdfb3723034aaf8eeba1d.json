{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.isAuthenticated$.pipe(take(1), map(isAuthenticated => {\n      if (isAuthenticated) {\n        return true;\n      } else {\n        return this.router.createUrlTree(['/login']);\n      }\n    }));\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","take","AuthGuard","constructor","authService","router","canActivate","route","state","isAuthenticated$","pipe","isAuthenticated","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\GeminiCLI_PR\\fitness-app-frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.authService.isAuthenticated$.pipe(\n      take(1),\n      map(isAuthenticated => {\n        if (isAuthenticated) {\n          return true;\n        } else {\n          return this.router.createUrlTree(['/login']);\n        }\n      })\n    );\n  }\n}\n"],"mappings":"AAIA,SAASA,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;;AAK1C,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,OAAO,IAAI,CAACJ,WAAW,CAACK,gBAAgB,CAACC,IAAI,CAC3CT,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACW,eAAe,IAAG;MACpB,IAAIA,eAAe,EAAE;QACnB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC,CACH;EACH;;;uBAjBWV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAThB,SAAS;MAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}