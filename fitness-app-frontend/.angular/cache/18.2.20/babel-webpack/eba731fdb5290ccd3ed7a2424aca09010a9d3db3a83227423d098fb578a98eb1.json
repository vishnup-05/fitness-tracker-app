{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.user = {};\n    }\n    ngOnInit() {\n      this.authService.getUserProfile().subscribe(data => {\n        this.user = data;\n      }, error => {\n        console.error('Error fetching user profile', error);\n      });\n    }\n    updateProfile() {\n      this.authService.updateUserProfile(this.user).subscribe(data => {\n        alert('Profile updated successfully!');\n        this.user = data;\n      }, error => {\n        console.error('Error updating user profile', error);\n        alert('Failed to update profile.');\n      });\n    }\n    static {\n      this.ɵfac = function ProfileComponent_Factory(t) {\n        return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ProfileComponent,\n        selectors: [[\"app-profile\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 26,\n        vars: 5,\n        consts: [[1, \"profile-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"disabled\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"age\"], [\"type\", \"number\", \"id\", \"age\", \"name\", \"age\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"weight\"], [\"type\", \"number\", \"id\", \"weight\", \"name\", \"weight\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"fitnessGoals\"], [\"id\", \"fitnessGoals\", \"name\", \"fitnessGoals\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"]],\n        template: function ProfileComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"User Profile\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.updateProfile();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Username:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.username, $event) || (ctx.user.username = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Email:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 6);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_11_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Age:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 8);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_15_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.age, $event) || (ctx.user.age = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n            i0.ɵɵtext(18, \"Weight (kg):\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"input\", 10);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_input_ngModelChange_19_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.weight, $event) || (ctx.user.weight = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n            i0.ɵɵtext(22, \"Fitness Goals:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"textarea\", 12);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ProfileComponent_Template_textarea_ngModelChange_23_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.fitnessGoals, $event) || (ctx.user.fitnessGoals = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(24, \"button\", 13);\n            i0.ɵɵtext(25, \"Update Profile\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.username);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.age);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.weight);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.fitnessGoals);\n          }\n        },\n        dependencies: [CommonModule, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n        styles: [\".profile-container[_ngcontent-%COMP%]{max-width:600px;margin:50px auto;padding:20px;border:1px solid #ccc;border-radius:8px;box-shadow:0 2px 10px #0000001a;background-color:#fff}h2[_ngcontent-%COMP%]{text-align:center;color:#333;margin-bottom:20px}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;color:#555}input[type=text][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #ddd;border-radius:4px;box-sizing:border-box}textarea[_ngcontent-%COMP%]{resize:vertical;min-height:80px}button[_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer;font-size:16px}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n      });\n    }\n  }\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}